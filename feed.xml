<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="https://daphtya.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://daphtya.github.io/" rel="alternate" type="text/html" /><updated>2018-06-02T15:14:31+07:00</updated><id>https://daphtya.github.io/</id><title type="html">Daphtya’s Github Page</title><subtitle>Github page for Daphtya (David Timothy Panjaitan). I'll try uploading my projects here.</subtitle><entry><title type="html">Search Engines: Sejarah dan Metode</title><link href="https://daphtya.github.io/2018/06/02/Search-Engine-Sejarah-dan-Metode.html" rel="alternate" type="text/html" title="Search Engines: Sejarah dan Metode" /><published>2018-06-02T08:40:57+07:00</published><updated>2018-06-02T08:40:57+07:00</updated><id>https://daphtya.github.io/2018/06/02/Search-Engine-Sejarah-dan-Metode</id><content type="html" xml:base="https://daphtya.github.io/2018/06/02/Search-Engine-Sejarah-dan-Metode.html">&lt;p&gt;Search engine, atau mesin pencari, merupakan sistem perangkat lunak yang dirancang untuk mengambil informasi dari jaringan. Informasi yang diambil dapat berupa halaman web, gambar, atau file lainnya. Saat ini, pasar search engine didominasi oleh Google, tapi Google bukanlah yang pertama maupun satu-satunya search engine yang tersedia di internet. Selain google, terdapat juga Bing, Yahoo! search, Baidu, dan lainnya. Bagaimana perkembangan search engine sehingga  menjadi seperti sekarang? Itu yang akan dibahas dalam artikel ini.&lt;/p&gt;

&lt;h2 id=&quot;sejarah&quot;&gt;Sejarah&lt;/h2&gt;

&lt;p&gt;Search Engine sudah ada dari sebelum world wide web diluncurkan pada Desember 1990. Search engine seperti “Who is” yang dibuat pada 1982 dan “Knowbot Information Service” yang dibuat pada 1989 sudah ada untuk mencari user dalam suatu jaringan.&lt;/p&gt;

&lt;p&gt;Pada awal peluncuran, keseluruhan World Wide Web diindeks secara manual dengan mendaftar semua server yang ada. Namun, karena perkembangan internet yang pesat, daftar yang dibuat akhirnya tidak dapat mencatat semuanya. Seiring perkembangan internet, beberapa search engine dibuat untuk mencari konten di internet. Tapi, pencarian masih didasarkan pada katalog web yang dibuat dan bukan berdasarkan  keseluruhan konten dari suatu halaman web.&lt;/p&gt;

&lt;p&gt;Sekitar tahun 2000,  Google menjadi Search engine dominan karena hasil pencariannya yang lebih baik, didasarkan pada algoritma PageRank yang dibuat oleh Sergey Brin dan Larry Page, para pendiri Google. Algoritma PageRank mengurutkan hasil pencarian berdasarkan jumlah dan Rank semua halaman yang memiliki link ke halaman tersebut.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/Search-engine.png&quot; /&gt;
	&lt;figcaption&gt;Beberapa contoh Search Engine&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;metode&quot;&gt;Metode&lt;/h2&gt;

&lt;p&gt;Search Engine modern seperti Google menggunakan proses Web Crawling dan Indexing untuk mengumpulkan dan mengorganisir data dari internet dan menyiapkannya untuk diberikan kepada pengguna yang memintanya.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;web-crawling&quot;&gt;Web Crawling&lt;/h3&gt;
    &lt;p&gt;Crawling dilakukan menggunakan perangkat lunak yang disebut Crawler. Crawler ini akan menelusuri halaman-halaman web melalui setiap link yang terdapat pada halaman web yang telah dikunjungi. Crawler ini akan mengumpulkan data dari halaman web yang dikunjungi dan mengirmkan kembali data itu ke server mesin pencari untuk diproses.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;indexing&quot;&gt;Indexing&lt;/h3&gt;
    &lt;p&gt;Indexing dilakukan untuk mengorganisir data yang dikumpulkan oleh Crawler berdasarkan faktor-faktor seperti waktu penerbitan halaman dan kata-kata kunci dalam halaman tersebut. Data yang telah diindeks kemudian disimpan di server Search Engine, siap untuk dicari.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;searching&quot;&gt;Searching&lt;/h3&gt;
    &lt;p&gt;Searching dilakukan saat pengguna memasukkan query ke mesin pencari. Search Engine kemudian menggunakan algortima pencariannya untuk mengambil data berdasarkan indeks pencarian yang telah dibuat.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pada Google, search query yang dimasukkan pengguna diproses dahulu untuk menambah akurasi pencarian. Algoritma dibalik proses tersebut terus dikembangkan setiap tahunnya. Saat artikel ini dibuat, secara garis besar proses tersebut terdiri dari:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;analisis-per-kata&quot;&gt;Analisis per kata&lt;/h3&gt;
    &lt;p&gt;Setiap kata dicek untuk kesalahan penulisan dan sinonim dari kata tersebut. Hubungan antar kata dalam membentuk kalimat juga diproses untuk menentukan tipe data yang diminta pengguna.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;mencocokkan-query&quot;&gt;Mencocokkan query&lt;/h3&gt;
    &lt;p&gt;Query yang telah diproses kemudian dicari dalam indeks pencarian Google. Pencarian di indeks berdasarkan pada kecocokan kata kunci dan relevansi halaman dengan query.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;mengurutkan-hasil-pencarian&quot;&gt;Mengurutkan Hasil Pencarian&lt;/h3&gt;
    &lt;p&gt;Hasil pencarian diurutkan dengan beberapa faktor seperti waktu penerbitan, jumlah kata kunci yang cocok, feedback dari pengguna, dan ranking halaman sesuai algoritma PageRank. Selain itu, halaman-halaman yang dianggap spam dihilangkan dari hasil pencarian.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;mencari-konteks&quot;&gt;Mencari Konteks&lt;/h3&gt;
    &lt;p&gt;Data yang lebih relevan dengan query pengguna ditentukan berdasarkan lokasi pengguna, riwayat pencarian, dan setting pencarian pengguna.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;menyajikan-hasil-terbaik&quot;&gt;Menyajikan hasil terbaik&lt;/h3&gt;
    &lt;p&gt;Di antara hasil akhir pencarian, diusahakan hasil yang ditunjukkan cukup beragam dan tidak berupa duplikat atau terlalu sama dengan hasil lain.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jika bisa, data yang diminta pengguna disajikan secara langsung pada halaman hasil pencarian secara singkat dan mudah dibaca untuk memberikan respon yang cepat tanpa harus membuka link ke halaman lain.&lt;/p&gt;

&lt;h2 id=&quot;kesimpulan&quot;&gt;Kesimpulan&lt;/h2&gt;
&lt;p&gt;Search Engine telah berkembang jauh dari sebelum diluncurkannya World Wide Web dan masih terus berkembang sampai sekarang. Algoritma yang digunakan juga terus berubah untuk memberikan pengguna hasil yang paling optimal.&lt;/p&gt;

&lt;h2 id=&quot;sumber&quot;&gt;Sumber&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://psu.pb.unizin.org/ist110/chapter/2-1-search-engines/&quot;&gt;Search Engines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search/howsearchworks/&quot;&gt;How Google Search Work&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Search engine, atau mesin pencari, merupakan sistem perangkat lunak yang dirancang untuk mengambil informasi dari jaringan. Informasi yang diambil dapat berupa halaman web, gambar, atau file lainnya. Saat ini, pasar search engine didominasi oleh Google, tapi Google bukanlah yang pertama maupun satu-satunya search engine yang tersedia di internet. Selain google, terdapat juga Bing, Yahoo! search, Baidu, dan lainnya. Bagaimana perkembangan search engine sehingga menjadi seperti sekarang? Itu yang akan dibahas dalam artikel ini.</summary></entry><entry><title type="html">Personal Assistants</title><link href="https://daphtya.github.io/raw-html/2018/05/19/Personal-Assistants-with-Speech-Recognition.html" rel="alternate" type="text/html" title="Personal Assistants" /><published>2018-05-19T08:40:57+07:00</published><updated>2018-05-19T08:40:57+07:00</updated><id>https://daphtya.github.io/raw-html/2018/05/19/Personal-Assistants-with-Speech-Recognition</id><content type="html" xml:base="https://daphtya.github.io/raw-html/2018/05/19/Personal-Assistants-with-Speech-Recognition.html">&lt;head&gt;
	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;./&quot; /&gt;
&lt;/head&gt;

&lt;h1 id=&quot;personal-assistant-dengan-natural-speech-recognition&quot;&gt;Personal Assistant dengan Natural Speech Recognition&lt;/h1&gt;

&lt;h2 id=&quot;pengenalan&quot;&gt;Pengenalan&lt;/h2&gt;

&lt;p&gt;Personal assistant merupakan profesi yang bertujuan membantu seseorang dalam menjalani kehidupan sehari
hari. Baik dari urusan pekerjaan sampai rekreasi, personal assistant menangani tugas-tugas yang tidak
terlalu penting untuk menghemat waktu. Tugas yang ditangani personal assistant berkisar dari manajemen
waktu, penjadwalan rapat dan pertemuan, dan pengambilan catatan.&lt;/p&gt;

&lt;p&gt;Setelah berkembangnya komputer modern, personal assistant mulai bermunculan dalam bentuk digital. PDA
(Personal Digital Assistant) pertama, “The Organizer”, diluncurkan oleh Psion pada 1984, tapi istilah PDA
sendiri baru mulai digunakan pada tahun 1992 oleh CEO Apple Computer, John Sculley, untuk mendeskripsikan
produk Apple Newton. PDA yang dimaksud di sini adalah “handheld PC” yang memiliki koneksi telepon, internet,
dan kemampuan menyimpan catatan. Sebagian besar PDA telah dihentikan produksinya setelah 2010 karena munculnya
smartphone.&lt;/p&gt;

&lt;p&gt;Namun, dalam beberapa tahun belakangan, istilah Personal Digital Assistant muncul kembali di dunia teknologi, kali ini
mengacu kepada perangkat lunak yang mendeteksi suara pengguna (speech recognition) dan merespon kepada permintaan yang diajukan pengguna.
PDA jenis ini, yang juga dinamakan Virtual Assistant, memiliki beberapa contoh nyata:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;siri&quot;&gt;Siri&lt;/h3&gt;
    &lt;p&gt;Siri diluncurkan untuk Apple iOS pada Februari 2010 dan diakuisisi Apple dua bulan kemudian.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;microsoft-cortana&quot;&gt;Microsoft Cortana&lt;/h3&gt;
    &lt;p&gt;Cortana diumumkan Microsoft pada April 2013 dan diluncurkan untuk Windows 10 pada Januari 2015.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;amazon-alexa&quot;&gt;Amazon Alexa&lt;/h3&gt;
    &lt;p&gt;Alexa diluncurkan Amazon sepaket dengan smart speaker buatannya, Amazon Echo, pada Juni 2015.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;google-assistant&quot;&gt;Google Assistant&lt;/h3&gt;
    &lt;p&gt;Assistant diluncurkan google pada Mei 2016 untuk perangkat yang menjalankan Android Marshmallow dan Nougat.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;kelebihan&quot;&gt;Kelebihan&lt;/h2&gt;

&lt;p&gt;Kelebihan utama dari Personal Assistant dengan speech recognition adalah kemudahan dalam penggunaannya. Secara teori, siapapun
yang bisa berbicara akan bisa menggunakannya. Tidak perlu mempelajari user interface dan metode input seperti pada interaksi
dengan komputer biasa. Batas jarak untuk penggunaan alat ini juga lebih fleksibel karena bisa digunakan dari manapun di mana
suara kita masih terdengar.&lt;/p&gt;

&lt;h2 id=&quot;potensi&quot;&gt;Potensi&lt;/h2&gt;

&lt;p&gt;Beberapa waktu yang lalu, pada Mei 2018, Google meluncurkan ekstensi untuk Google Assistant yang dinamakan Google Duplex.
Ekstensi ini memungkinkan Assistant membuat panggilan telepon secara otomatis untuk memesan tempat dan mengatur waktu pertemuan.
Menariknya, percakapan telepon yang dilakukan Google Duplex sudah sangat meyakinkan sampai nomor yang dituju tidak sadar
bahwa mereka berbicara dengan sebuah perangkat lunak. Meski masih terbatas pada pembuatan janji pertemuan, teknologi ini
menunjukkan bahwa perangkat lunak dapat menjalankan percakapan yang terdengar alami dan dengan pengembangan mungkin saja
akan segera merambah ke bidang percakapan lain.&lt;/p&gt;

&lt;h2 id=&quot;kekurangan&quot;&gt;Kekurangan&lt;/h2&gt;

&lt;p&gt;Dengan semua kelebihan yang dimiliki personal assistant digital, masih ada beberapa kekurangan yang tersisa. Kekurangan mendasar dari
sistem yang menggunakan suara untuk berinteraksi adalah input dan output yang hanya bisa terjadi dalam satu arah pada suatu waktu. Sebagai
akibatnya, alat tidak bisa digunakan untuk tugas yang lebih kompleks seperti browsing. Selain itu, sistem pengenalan suara yang belum sempurna 
dalam mengenali perintah pengguna, dibarengi dengan fakta bahwa alat selalu mendengarkan suara di sekitarnya, memungkinkan terjadinya kasus 
pelanggaran privasi seperti yang akan dibahas pada bagian berikutnya.&lt;/p&gt;

&lt;h2 id=&quot;ancaman-privasi&quot;&gt;Ancaman Privasi&lt;/h2&gt;

&lt;p&gt;Dalam suatu kasus yang terjadi baru-baru ini juga, percakapan dari sepasang pengguna Amazon Echo direkam dan dikirim ke seseorang di daftar kontak 
tanpa sepengetahuan mereka. Menurut Amazon, hal ini mungkin disebabkan kesalahan dalam speech recognition yang menginterpretasi percakapan dalam ruangan 
secara berturut-turut, mulai dari aktivasi alat (pemanggilan “Alexa”), pemilihan perintah (“Send Message”), pemilihan kontak tujuan dari kontak, sampai 
konfirmasi pengiriman pesan. Kebetulan yang terkesan tidak dapat dipercaya tapi benar-benar terjadi ini menunjukkan masih adanya kekurangan dalam
teknologi ini. Dalam kasus ini, pengguna tidak mengalami kerugian materiil, tapi ancaman terhadap privasi yang diakibatkan alat yang selalu mendengarkan
terasa nyata bagi mereka.&lt;/p&gt;

&lt;h2 id=&quot;kesimpulan&quot;&gt;Kesimpulan&lt;/h2&gt;

&lt;p&gt;Keseluruhan, teknologi ini masih dalam perkembangan dan masih ada kekurangan. Tapi, perkembangan teknologi ini sangat pesat dan penulis sendiri yakin 
kekurangan-kekurangan yang ada akan ditangani di masa depan. Karena jika di masa depan akan lebih banyak Intelejensi Buatan yang terintegrasi dengan kehidupan sehari-hari, teknologi ini akan menjadi landasan penting untuk mencapainya.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://daphtya.github.io/jekyll/update/2018/05/19/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-05-19T08:40:57+07:00</published><updated>2018-05-19T08:40:57+07:00</updated><id>https://daphtya.github.io/jekyll/update/2018/05/19/welcome-to-jekyll</id><content type="html" xml:base="https://daphtya.github.io/jekyll/update/2018/05/19/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>